{"version":3,"sources":["logo.svg","services/firebase.js","ManagerPage.js","CalibrationPage.js","LongTestPage.js","PersonalDetails.js","HappinesPage.js","ExpPage2.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","ManagerPage","props","useState","experimemtDocID","setExpirementerDoc","experimemterName","setExpirementerName","experimemtTime","setExpirementTime","experimentUpdatingData","setExpData","setAsLoaded","dataRenderedasList","setRenderData","newDocAlarm","setNewDocAlarm","justCreatedDocID","setJustCreatedDocId","comment","handleChangeComment","allComments","setAllComments","download","setDownload","okToDownload","setOkToDownload","okToDownloadAll","setOkToDownloadAll","workBook","setWorkBook","getExperimenterName","db","orderBy","limit","get","then","data","docRef","docs","docData","firstName","id","lastName","console","log","onCollectionUpdate","undefined","doc","onSnapshot","docSnapshot","renderData3","err","initNewDocument","add","calibrationTests","time","dateFormat","Date","docID","split","handleChange","evt","value","target","name","allComs","calibTest","JSON","stringify","text","list","forEach","item","push","Row","Col","type","onChange","style","width","height","testNum","length","a","alldocs","count","fields","i","workBookList","allWorkBookSheets","currData","docTime","currentTime","twoWeeksAgo","setDate","getDate","parse","Object","entries","k","v","Column","label","toString","val","currSheet","Sheet","Parser","unwind","encoding","finalComponent","filename","element","className","latestDoc","parsedData","parser","csv","useEffect","Button","variant","onClick","color","tyle","listStyleType","docRefUpdate","update","downloadFile","disabled","collection","CalibrationPage","querySnapshot","document","setState","sliderValue","onSliderChange","state","testCouner","start","lastDocID","bind","handleSubmit","handleReset","this","unsubscribe","snapshot","childSnapshot","tutorial","input","currTestCouner","dataToUpdate","prevState","newData","event","preventDefault","addTestScoreToDoc2","delete","xs","margin","marginRight","paddingLeft","min","max","defaultValue","step","reverse","railStyle","backgroundColor","trackStyle","handleStyle","borderColor","marginLeft","marginTop","Component","LongTestPage","PersonalDetails","saved","dataUpdate","onSubmit","HappinesPage","CalibTest","docRefID","LongTest","ExpPage2","startExperiment","setExpirmentStatus","expirementerDoc","activeTab","changeTab","menuOrBackButton","setMenu","Navbar","Nav","Link","href","active","App","getDocRefFromChild","activeDocRef","settings","timestampsInSnapshots","ReactGA","initialize","debug","pageview","window","location","pathname","search","tab","Container","fluid","sendDocRefToParent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c71ec5a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n\r\n    apiKey: \"AIzaSyA3Jx8S_Yh6vdOI9RRP1ybnuG_Kvox093g\",\r\n    authDomain: \"slider-app1.firebaseapp.com\",\r\n    databaseURL: \"https://slider-app1.firebaseio.com\",\r\n    projectId: \"slider-app1\",\r\n    storageBucket: \"slider-app1.appspot.com\",\r\n    messagingSenderId: \"813536171331\",\r\n    appId: \"1:813536171331:web:ee4f67d30e6b1f45c48bf6\",\r\n    measurementId: \"G-2PMF6CRJ79\"\r\n }\r\n\r\n//!firebase.apps.length ? firebase.initializeApp(config) : null;\r\nfirebase.initializeApp(config);\r\n\r\n export default  firebase.firestore();\r\n","import React, { useState , useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n\r\n} from \"react-bootstrap\";\r\nimport firebase from \"./services/firebase\";\r\n\r\nimport dateFormat from 'dateformat';\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport {Parser} from \"json2csv\"\r\n\r\nimport Workbook from 'react-excel-workbook'\r\n\r\n\r\n\r\n\r\n const ManagerPage = (props) => {\r\n\r\n        const [experimemtDocID, setExpirementerDoc] = useState();\r\n        const [experimemterName, setExpirementerName] = useState(\"\");\r\n        const [experimemtTime, setExpirementTime] = useState(\"\");\r\n        const [experimentUpdatingData, setExpData] = useState()\r\n        const [dataAsLsit, setDataAsList] = useState([])\r\n        const [loaded, setAsLoaded] = useState(false)\r\n        const [dataRenderedasList, setRenderData] = useState([])\r\n        const [newDocAlarm, setNewDocAlarm] = useState(true)\r\n        const [justCreatedDocID, setJustCreatedDocId] = useState(\"\");\r\n        const [comment,handleChangeComment] = useState();\r\n        const [allComments, setAllComments] =useState({});\r\n        const [download,setDownload] = useState(    [\r\n            [\"notSaved\"],\r\n            [\"notSaved\"], ]    )\r\n\r\n        const [okToDownload, setOkToDownload] = useState(false)\r\n        const [okToDownloadAll, setOkToDownloadAll] = useState(false)\r\n        // const [downloadAll,setDownloadAll] = useState(    [\r\n        //     [\"notSaved\"],\r\n        //     [\"notSaved\"], ]    )\r\n            const [downloadAll,setDownloadAll] = useState([])\r\n        const[workBook,setWorkBook] = useState(<h6>wait</h6>)\r\n    \r\n\r\n\r\n    useEffect(() => { \r\n        const db = props.db\r\n        db.orderBy('time', 'desc').limit(1).get().\r\n           then((data) =>{\r\n               const docRef = data.docs[0];\r\n               const docData = docRef.data()\r\n               const docID = docRef.id\r\n               setExpirementerDoc(docID)\r\n               setExpData(data)\r\n               const time = docData.time.split(\" \")[1].split(\":\")\r\n               setExpirementTime(time[0] + \":\" + time[1])\r\n               setAsLoaded(true)\r\n               onCollectionUpdate()\r\n\r\n               renderData3()\r\n\r\n           } \r\n           )\r\n\r\n\r\n        //remember to unsubscribe from your realtime listener on unmount or you will create a memory leak\r\n        return () => undefined\r\n    }, []);\r\n\r\n\r\n    function getExperimenterName(){\r\n        const db = props.db\r\n        db.orderBy('time', 'desc').limit(1).get().\r\n           then((data) =>{\r\n               const docRef = data.docs[0];\r\n               const docData = docRef.data()\r\n               const docID = docRef.id\r\n               const firstName = docData.firstName\r\n               const lastName = docData.lastName\r\n               console.log(\"name: \"+ firstName + \" \" + lastName)\r\n               //\r\n\r\n               setExpirementerName(firstName + \" \" + lastName)\r\n\r\n\r\n           } \r\n           )\r\n\r\n    }\r\n\r\n\r\n     function getLateseDocID(){\r\n        const db = props.db\r\n         db.orderBy('time', 'desc').limit(1).get().\r\n            then((data) =>{\r\n                const docRef = data.docs[0];\r\n                const docData = docRef.data()\r\n                const docID = docRef.id\r\n                setExpirementerDoc(docID)\r\n                const time = docData.time.split(\" \")[1].split(\":\")\r\n\r\n                setExpirementTime(time[0] + \":\" + time[1])\r\n                setAsLoaded(true)\r\n                getExperimenterName()\r\n\r\n                onCollectionUpdate()\r\n                renderData3()\r\n\r\n\r\n            } \r\n            )\r\n\r\n    }\r\n   \r\n\r\n     function onCollectionUpdate() {\r\n         console.log(\"update: \" +experimemtDocID)\r\n         if(experimemtDocID != undefined){\r\n            const doc = props.db.doc(experimemtDocID)\r\n\r\n            const observer = doc.onSnapshot(docSnapshot => {\r\n                const data = docSnapshot.data();\r\n                // console.log(`Received doc snapshot:${docSnapshot.id} ${data}`);\r\n               // console.log(data)\r\n                setExpData(data)\r\n                renderData3()\r\n                getExperimenterName()\r\n                // ...\r\n              }, err => {\r\n                console.log(`Encountered error: ${err}`);\r\n              });\r\n\r\n         }\r\n        \r\n\r\n      }\r\n\r\n\r\n    function initNewDocument(){\r\n        setNewDocAlarm(true);\r\n        const db = props.db;\r\n        console.log(db)\r\n        db.add({\r\n            calibrationTests: [],\r\n            time:dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"),\r\n          }).then(docRef => {\r\n              console.log('*** STARTED NEW DOC: ' + docRef.id);\r\n              setJustCreatedDocId(docRef.id)\r\n              \r\n\r\n            //   setExpirementerDoc(docRef.id)\r\n\r\n          }).then(()=>getLateseDocID() ) \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    function continuteLastDocument(){\r\n        const db = props.db\r\n        db.orderBy('time', 'desc').limit(1).get().\r\n           then((data) =>{\r\n               const docRef = data.docs[0];\r\n            //    const docData = docRef.data()\r\n            //    const docID = docRef.id\r\n            //    setExpirementerDoc(docRef.id)\r\n            console.log(\"*** CONTINUE last doc: \" +docRef.id )\r\n            setNewDocAlarm(false)\r\n            renderData3()\r\n\r\n            getExperimenterName()\r\n\r\n\r\n\r\n           }\r\n           )\r\n        \r\n    }\r\n\r\n    function handleChange(evt) {\r\n        const value = evt.target.value;\r\n        const name = evt.target.name\r\n        let allComs = allComments\r\n        allComs[name] = value\r\n        setAllComments(allComs)\r\n        handleChangeComment({\r\n          ...comment,\r\n          [evt.target.name]: value\r\n        });\r\n        const db = props.db\r\n        db.orderBy('time', 'desc').limit(1).get().\r\n            then((data) =>{\r\n                const docRef = data.docs[0];\r\n                const docRefUpdate = db.doc(docRef.id);\r\n                const docData = docRef.data()\r\n\r\n                let calibTest = docData[\"calibrationTests\"]\r\n                console.log(\"calbs: \" +JSON.stringify(calibTest))\r\n                 calibTest[name] = {...calibTest[name], text:value  }\r\n                // docRefUpdate.update({calibrationTests: calibTest})\r\n\r\n\r\n            })\r\n      }\r\n\r\n\r\n\r\n      function saveDataToCloud() {\r\n          const allComs = allComments\r\n          const db = props.db\r\n          console.log(`saving all comments:` + JSON.stringify(allComments))\r\n          db.orderBy('time', 'desc').limit(1).get().\r\n            then((data) =>{\r\n                const docRef = data.docs[0];\r\n                const docRefUpdate = db.doc(docRef.id);\r\n                const docData = docRef.data()\r\n\r\n                let calibTest = docData[\"calibrationTests\"]\r\n                let i=0;\r\n                calibTest.forEach( (item) => {\r\n                    if (allComments[i]) {\r\n                        item.text = allComs[i]\r\n                    }\r\n                    i++;\r\n                })\r\n                console.log(\"updated calbs: \" +JSON.stringify(calibTest))\r\n\r\n                docRefUpdate.update({calibrationTests: calibTest})\r\n                downloadFile()\r\n                setOkToDownload(true)\r\n\r\n\r\n            })\r\n          \r\n      }\r\n\r\n\r\n    function renderData3(){\r\n        if(experimentUpdatingData){\r\n\r\n\r\n            const doc = props.db.doc(experimemtDocID)\r\n\r\n            const observer = doc.onSnapshot(docSnapshot => {\r\n                const data = docSnapshot.data();\r\n                console.log(`*** RENDERING list of :${docSnapshot.id}`);\r\n               // console.log(data)\r\n                let list = []\r\n                let calibTest = data[\"calibrationTests\"]\r\n                let name = 0\r\n\r\n                calibTest.forEach( (item) => {\r\n                    // console.log(`${item.testNum} : ${item.value}`)\r\n                    let text = item?.text;\r\n                    let time = item.time\r\n                    console.log('text :' +text)\r\n                    list.push(\r\n                        <Row>\r\n                            <Col>\r\n                                \r\n                                <form>\r\n                                {/* <li key={id} style={{ listStyleType: \"none\" }}>\r\n                                {item.testNum} : {item.value}\r\n                                \r\n                                </li> */}\r\n\r\n                                    <label>\r\n                                    <textarea\r\n                                    name = {name}\r\n                                    type=\"text\"\r\n                                    value={comment}\r\n                                    onChange={handleChange}\r\n                                    style= {{\r\n                                        width: \"600px\",\r\n                                        height: \"50px\"\r\n                                    }}\r\n                                  >\r\n                                       {text}\r\n                                  </textarea>\r\n                                      {item.testNum} - {item.value} , {time}\r\n\r\n                                    </label>\r\n                                </form>\r\n                         </Col>\r\n                        </Row>\r\n                    )\r\n\r\n                    name++;\r\n\r\n                }\r\n                \r\n                )\r\n                console.log(docSnapshot.id + \" *,* \" + justCreatedDocID)\r\n\r\n                if (list.length > 0)  {\r\n                    setRenderData(list);\r\n                    if(docSnapshot.id === justCreatedDocID){\r\n                        console.log(\"***renering the newest list\")\r\n\r\n                    }\r\n                }\r\n                else{\r\n                    setRenderData(<h6>פרטי ניסוי יועדכנו כאשר הניסוי יחל</h6>)\r\n                }\r\n                \r\n\r\n                // ...\r\n              }, err => {\r\n                console.log(`Encountered error: ${err}`);\r\n              });\r\n            \r\n\r\n        }\r\n  \r\n      }\r\n\r\n        async function downloadLastWeek(){\r\n            const db = props.db\r\n            const alldocs = await db.orderBy('time', 'desc').limit(100).get()\r\n            let count = 0\r\n            let fields = [\"calibrationTests\", \"time\", \"firstName\",\"lastName\"];\r\n            let i=0;\r\n            let workBookList = []\r\n            let allWorkBookSheets = []\r\n            let currData = {}\r\n\r\n            await alldocs.forEach( (doc) =>{\r\n                let docData = doc.data()\r\n                let docTime = docData.time;\r\n                let currentTime = new Date();\r\n                currData = {}\r\n                workBookList=[]\r\n\r\n                let twoWeeksAgo = currentTime.setDate(currentTime.getDate()-14);\r\n                if(Date.parse(docTime) > twoWeeksAgo){\r\n                    for (let [k,v] of Object.entries(docData)){\r\n                        if (k!=='calibrationTests'){\r\n                            currData[k] = v\r\n                            workBookList.push(<Workbook.Column label={k} value={k}/>)\r\n                        }\r\n                    }\r\n                    console.log('currData : ' + JSON.stringify(currData))\r\n                    count++\r\n                    let calibTest = docData[\"calibrationTests\"]\r\n                    i=0;\r\n                    if (calibTest ) {\r\n                        \r\n                        calibTest.forEach( (item) => {\r\n                            let testNum = item.testNum + '  [' + i.toString() + ']'\r\n                            let val = item.value\r\n                            if (allComments[i]) {\r\n                                val =  val+  \" , \"  +  allComments[i] \r\n                            }\r\n                            currData[testNum] = val\r\n                            workBookList.push(<Workbook.Column label={testNum} value={testNum}/>)\r\n                            i++;\r\n                        })\r\n\r\n                    }\r\n                    let currSheet = (\r\n                        <Workbook.Sheet data={[currData]} name={`${currData.firstName} ${currData.lastName} ${count}`} >\r\n                            {workBookList}\r\n                        </Workbook.Sheet>\r\n\r\n\r\n                    )\r\n                    allWorkBookSheets.push(currSheet)\r\n                \r\n                }\r\n            } )\r\n            const parser = new Parser({\r\n                fields,\r\n                unwind: fields,\r\n                encoding: \"uft8\"\r\n            });\r\n            \r\n            // setWorkBook(workBookList)\r\n            // setDownloadAll([currData])\r\n\r\n        //  setWorkBook(\r\n        //         <Workbook filename=\"example.xlsx\" element={<button className=\"btn btn-lg btn-primary\">Try me!</button>}>\r\n        //         {allWorkBookSheets}\r\n        //     </Workbook>  \r\n        //     )\r\n            let finalComponent = (\r\n                <Workbook filename=\"last2weeks.xlsx\" element={<button className=\"btn btn-lg btn-primary\">לחצ/י להודרת השבועיים האחרונים</button>}>\r\n                {allWorkBookSheets}\r\n            </Workbook>\r\n            )\r\n            setWorkBook(finalComponent)\r\n            setOkToDownloadAll(true)\r\n\r\n\r\n    \r\n            \r\n            console.log('workbook: ' + JSON.stringify( finalComponent))\r\n      \r\n        }\r\n\r\n        async function downloadFile(){\r\n        var obj = allComments\r\n        // var data = \"text/csv;charset=utf-8,\" + encodeURIComponent(JSON.stringify(obj));\r\n        const db = props.db\r\n        const alldocs = await db.orderBy('time', 'desc').limit(1).get()\r\n        const latestDoc = alldocs.docs[0]\r\n        let docData = latestDoc.data()\r\n        console.log(`exporting: ${JSON.stringify(docData)}`)\r\n\r\n        \r\n        let fields = [\"calibrationTests\", \"time\", \"firstName\",\"lastName\"];\r\n        let calibTest = docData[\"calibrationTests\"]\r\n        let i=0;\r\n        let parsedData = {}\r\n\r\n        calibTest.forEach( (item) => {\r\n            let testNum = item.testNum + '  [' + i.toString() + ']'\r\n            let val = item.value\r\n            fields.push(testNum)\r\n            docData[testNum] = val\r\n            parsedData[testNum] = val\r\n            if (allComments[i]) {\r\n                val =  val+  \" , \"  +  allComments[i] \r\n            }\r\n            docData[testNum] = val\r\n\r\n            i++;\r\n        })\r\n        \r\n        const parser = new Parser({\r\n            fields,\r\n            unwind: fields,\r\n            encoding: \"uft8\"\r\n        });\r\n        delete docData['calibrationTests'];\r\n        \r\n        const csv = parser.parse(docData);\r\n        setDownload(csv)\r\n        console.log('output',csv);\r\n\r\n      }\r\n\r\n      \r\n\r\n\r\n        return (\r\n            <div>\r\n                <h3>דף מנהל</h3>\r\n                <h6>שם הנסיין: {experimemterName} </h6>\r\n                <h6>זמן תחילת הניסוי: {experimemtTime} </h6>\r\n\r\n            \r\n                <Row>\r\n                        <Col>\r\n                            <Button variant=\"primary\"\r\n                                onClick = {()=> {\r\n                                initNewDocument();\r\n                                }}> \r\n                                התחל ניסוי עבור נסיין חדש\r\n                            </Button>\r\n                            | \r\n\r\n                            {/* <Button variant=\"success\"\r\n                                onClick={getLateseDocID}>\r\n                                הצג פרטי ניסוי נוכחי\r\n                            </Button>\r\n\r\n                            | */}\r\n\r\n                            <Button  variant=\"success\"\r\n                                    // disabled={!newDocAlarm}\r\n\r\n                                onClick = {()=> {\r\n                                    continuteLastDocument();\r\n                                    }}\r\n                                >\r\n                                המשך ניסוי אחרון\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        newDocAlarm ?\r\n                        <h6 style ={{color:\"red\"}}>\r\n                            יש ללחוץ על  \"המשך ניסוי אחרון\" כדי לראות פרטי ניסוי עדכני\r\n                        </h6>:\r\n                        null\r\n                    }\r\n\r\n\r\n\r\n                <div>\r\n                    <ul tyle={{ listStyleType: \"none\" }}>\r\n\r\n                        {\r\n                     \r\n\r\n                                dataRenderedasList\r\n                                \r\n                \r\n                        }\r\n                    \r\n\r\n                    </ul>\r\n\r\n                    {\r\n                     \r\n                    }\r\n\r\n                </div>\r\n                <Button onClick={saveDataToCloud}>\r\n                    שמור פרטי ניסוי נוכחי\r\n                </Button>\r\n               \r\n\r\n\r\n                  \r\n\r\n          \r\n               {\r\n                   \r\n                   okToDownload?  \r\n                       <CSVLink data={download} \r\n                   filename={`${experimemterName}.csv`}\r\n                    className=\"btn btn-primary\"\r\n                    >\r\n                        הורד פרטי ניסוי\r\n                    </CSVLink>\r\n                     :\r\n                     <Button disabled ={!okToDownload}>\r\n                         הורדת ניסוי נוכחי - יש לשמור פרטי ניסוי קודם\r\n                     </Button>\r\n\r\n               }\r\n\r\n               <Row>\r\n                   <Col>\r\n                   {\r\n                    okToDownloadAll ? \r\n                    <div>\r\n                        {workBook}\r\n                    </div>\r\n                    :\r\n\r\n                    <Button onClick={downloadLastWeek}>\r\n                         טעינת פרטי ניסויים מהשבועיים האחרונים \r\n                    </Button>\r\n                }\r\n                   </Col>\r\n               </Row>\r\n               \r\n\r\n               \r\n\r\n\r\n\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ManagerPage;","import firebase from \"./services/firebase\";\r\nimport React, { Component, useState } from \"react\";\r\nimport Slider, { Range } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\n\r\nimport dateFormat from 'dateformat';\r\n\r\n\r\nconst db = firebase.collection(\"/BGU-lab-dev\");\r\n\r\nclass CalibrationPage extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      testCouner: 0,\r\n      sliderValue: 0,\r\n      start:false,\r\n      lastDocID:\"\",\r\n\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.start = this.start.bind(this);\r\n\r\n\r\n    \r\n\r\n  }\r\n  componentDidMount() {\r\n    this.unsubscribe = firebase.collection('/slider-data').onSnapshot(this.onCollectionUpdate) \r\n    this.setState({sliderValue:0})\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // we have to unsubscribe when component unmounts, because we don't need to check for updates\r\n    this.unsubscribe()\r\n  }\r\n\r\n  \r\n  onCollectionUpdate = (querySnapshot) => {\r\n    // we have to update the state\r\n    let value = 0;\r\n    querySnapshot.forEach((document) => {\r\n      const doc= document.data();\r\n      console.log(doc)\r\n      value = doc.value\r\n    })\r\n    this.setState({value:value, sliderValue:value})\r\n\r\n  }\r\n\r\n\r\n\r\n  getData() {\r\n    let value;\r\n    db.get().then(function(snapshot) {\r\n      snapshot.forEach( function(childSnapshot){\r\n        db.doc(childSnapshot.id).get().\r\n        then( docSnapshot => {\r\n          [docSnapshot].forEach( doc => {\r\n            const data = doc.data();\r\n            console.log(doc.id, data);\r\n            console.log(`sliderID: ${data.id}, value: ${data.value}`)\r\n            value =  data.value;\r\n          })\r\n\r\n        })\r\n        //console.log(`id: ${childSnapshot.id}, data: ${childSnapshot.data}`)\r\n      })\r\n    })\r\n    console.log(value)\r\n    return value\r\n  }\r\n\r\n\r\n\r\n  create(tutorial) {\r\n    return db.add(tutorial);\r\n  }\r\n\r\n\r\n\r\n  update( input) {\r\n    db.get().then(function(snapshot) {\r\n      snapshot.forEach( function(childSnapshot){\r\n        db.doc(childSnapshot.id).update({value:input})\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  addTestScoreToDoc2(input){\r\n         db.orderBy('time', 'desc').limit(1).get().\r\n            then((data) =>{\r\n              const docRef = data.docs[0];\r\n              const docData = docRef.data()\r\n              const docID = docRef.id\r\n              let currTestCouner = this.state.testCouner\r\n              if(this.state.lastDocID !== docRef.id) {\r\n                this.setState({lastDocID: docRef.id, testCouner:1})\r\n                currTestCouner=1;\r\n              }\r\n\r\n              let dataToUpdate = docData[\"calibrationTests\"]\r\n\r\n              let scoreCounter = `כיול ${this.state.testCouner}`\r\n              this.setState(prevState =>  {return {testCouner: prevState.testCouner+1} })\r\n              let time = dateFormat(\"HH:MM:ss\")\r\n              console.log('time: ' +time)\r\n              let newData ={testNum : ` כיול ${currTestCouner}`, value:input, time:time }\r\n              //newData[scoreCounter] = input\r\n              dataToUpdate.push(newData)\r\n              const docRefUpdate = db.doc(docRef.id);\r\n              docRefUpdate.update({calibrationTests: dataToUpdate})\r\n\r\n\r\n            } \r\n            )\r\n  }\r\n\r\n\r\n \r\n    \r\n  handleChange(event) {\r\n    this.setState({input: event.target.value}, ()=>{\r\n        this.update(event.target.value,this)\r\n      });\r\n    }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //this.update(this.state.sliderValue)\r\n    this.addTestScoreToDoc2(this.state.sliderValue)\r\n    this.setState({sliderValue:0})\r\n\r\n  }\r\n\r\n  handleReset(event) {\r\n    event.preventDefault();\r\n    //this.setState({sliderValue:0})\r\n    this.setState({sliderValue:0})\r\n    \r\n\r\n  }\r\n\r\n  start(event) {\r\n    event.preventDefault();\r\n    //this.setState({sliderValue:0})\r\n    this.setState({sliderValue:0, start:true})\r\n\r\n  }\r\n\r\n  delete(id) {\r\n    return db.doc(id).delete();\r\n  }\r\n\r\n  onSliderChange = value => {\r\n    this.setState(\r\n      {\r\n        sliderValue:value\r\n      },\r\n      () => {\r\n        console.log(this.state.sliderValue);\r\n      }\r\n    );\r\n  };\r\n\r\n  \r\n  render(){\r\n    let sliderHeight = 200;\r\n    return (\r\n        <Row>\r\n          <Col>\r\n\r\n        <Row>\r\n\r\n          <Col >\r\n          {!this.state.start ?  \r\n                    <Button onClick ={this.start}>\r\n                    התחל\r\n                  </Button>\r\n          :\r\n                <div>\r\n                     \r\n                       <Button\r\n                variant=\"outline-primary\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                  Submit\r\n              </Button>\r\n\r\n              <Row>\r\n                    <Col xs={1} >\r\n                    <h6 style={{margin:\"0px\"}}> הכאב הכי חזק</h6>\r\n                    </Col>\r\n\r\n                    <Col xs={10}>\r\n\r\n                    </Col>\r\n                    \r\n                    <Col xs={1} style={{marginRight:\"0px\", paddingLeft:\"0px\"}}>\r\n                      <h6 >לא כואב בכלל</h6>\r\n                    </Col>\r\n              </Row>\r\n              \r\n\r\n              <Slider\r\n              min={0}\r\n              max={10}\r\n              defaultValue={8}\r\n              value={this.state.sliderValue}\r\n              onChange={this.onSliderChange}\r\n              step ={0.1}\r\n              reverse = {true}\r\n              railStyle={{ backgroundColor: 'grey', height: sliderHeight }}\r\n              trackStyle={{ backgroundColor: 'red', height: sliderHeight }}\r\n              handleStyle={{\r\n                borderColor: 'grey',\r\n                height: sliderHeight,\r\n                width: 1,\r\n                marginLeft: -14,\r\n                marginTop: 0,\r\n                backgroundColor: 'white',\r\n              }}\r\n\r\n              />\r\n\r\n              {/* slider value: {this.state.sliderValue} */}\r\n\r\n\r\n                  \r\n                </div>\r\n          }\r\n\r\n     \r\n           \r\n          </Col>\r\n        </Row>\r\n    \r\n\r\n\r\n        </Col>\r\n        </Row>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default CalibrationPage;","import firebase from \"./services/firebase\";\r\nimport React, { Component, useState } from \"react\";\r\nimport Slider, { Range } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\n\r\nimport dateFormat from 'dateformat';\r\n\r\n\r\n\r\nconst db = firebase.collection(\"/BGU-lab-dev\");\r\n\r\nclass LongTestPage extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      testCouner: 0,\r\n      sliderValue: 0,\r\n      start:false,\r\n      lastDocID:\"\",\r\n\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.start = this.start.bind(this);\r\n\r\n\r\n    \r\n\r\n  }\r\n  componentDidMount() {\r\n    this.unsubscribe = firebase.collection('/slider-data').onSnapshot(this.onCollectionUpdate) \r\n    this.setState({sliderValue:0})\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // we have to unsubscribe when component unmounts, because we don't need to check for updates\r\n    this.unsubscribe()\r\n  }\r\n\r\n  \r\n  onCollectionUpdate = (querySnapshot) => {\r\n    // we have to update the state\r\n    let value = 0;\r\n    querySnapshot.forEach((document) => {\r\n      const doc= document.data();\r\n      console.log(doc)\r\n      value = doc.value\r\n    })\r\n    this.setState({value:value, sliderValue:value})\r\n\r\n  }\r\n\r\n\r\n\r\n  getData() {\r\n    let value;\r\n    db.get().then(function(snapshot) {\r\n      snapshot.forEach( function(childSnapshot){\r\n        db.doc(childSnapshot.id).get().\r\n        then( docSnapshot => {\r\n          [docSnapshot].forEach( doc => {\r\n            const data = doc.data();\r\n            console.log(doc.id, data);\r\n            console.log(`sliderID: ${data.id}, value: ${data.value}`)\r\n            value =  data.value;\r\n          })\r\n\r\n        })\r\n        //console.log(`id: ${childSnapshot.id}, data: ${childSnapshot.data}`)\r\n      })\r\n    })\r\n    console.log(value)\r\n    return value\r\n  }\r\n\r\n\r\n\r\n  create(tutorial) {\r\n    return db.add(tutorial);\r\n  }\r\n\r\n\r\n\r\n  update( input) {\r\n    db.get().then(function(snapshot) {\r\n      snapshot.forEach( function(childSnapshot){\r\n        db.doc(childSnapshot.id).update({value:input})\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  addTestScoreToDoc2(input){\r\n         db.orderBy('time', 'desc').limit(1).get().\r\n            then((data) =>{\r\n              const docRef = data.docs[0];\r\n              const docData = docRef.data()\r\n              const docID = docRef.id\r\n              let currTestCouner = this.state.testCouner\r\n              if(this.state.lastDocID !== docRef.id) {\r\n                this.setState({lastDocID: docRef.id, testCouner:1})\r\n                currTestCouner=1;\r\n              }\r\n\r\n              let dataToUpdate = docData[\"calibrationTests\"]\r\n              this.setState(prevState =>  {return {testCouner: prevState.testCouner+1} })\r\n              let time = dateFormat(\"HH:MM:ss\")\r\n              let newData ={testNum : ` כאב ארוך  ${currTestCouner}`, value:input, time:time }\r\n              //newData[scoreCounter] = input\r\n              dataToUpdate.push(newData)\r\n              const docRefUpdate = db.doc(docRef.id);\r\n              docRefUpdate.update({calibrationTests: dataToUpdate})\r\n\r\n\r\n            } \r\n            )\r\n  }\r\n\r\n\r\n \r\n    \r\n  handleChange(event) {\r\n    this.setState({input: event.target.value}, ()=>{\r\n        this.update(event.target.value,this)\r\n      });\r\n    }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //this.update(this.state.sliderValue)\r\n    this.addTestScoreToDoc2(this.state.sliderValue)\r\n    this.setState({sliderValue:0})\r\n\r\n  }\r\n\r\n  handleReset(event) {\r\n    event.preventDefault();\r\n    //this.setState({sliderValue:0})\r\n    this.setState({sliderValue:0})\r\n    \r\n\r\n  }\r\n\r\n  start(event) {\r\n    event.preventDefault();\r\n    //this.setState({sliderValue:0})\r\n    this.setState({sliderValue:0, start:true})\r\n\r\n  }\r\n\r\n  delete(id) {\r\n    return db.doc(id).delete();\r\n  }\r\n\r\n  onSliderChange = value => {\r\n    this.setState(\r\n      {\r\n        sliderValue:value\r\n      },\r\n      () => {\r\n        console.log(this.state.sliderValue);\r\n      }\r\n    );\r\n  };\r\n\r\n  \r\n  render(){\r\n    let sliderHeight = 200;\r\n    return (\r\n        <Row>\r\n          <Col>\r\n\r\n        <Row>\r\n\r\n          <Col >\r\n          {!this.state.start ?  \r\n                    <Button onClick ={this.start}>\r\n                    התחל\r\n                  </Button>\r\n          :\r\n                <div>\r\n                       <Button\r\n                variant=\"outline-primary\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                  Submit\r\n              </Button>\r\n\r\n              <Row>\r\n                    <Col xs={1} >\r\n                    <h6 style={{margin:\"0px\"}}> הכאב הכי חזק</h6>\r\n                    </Col>\r\n\r\n                    <Col xs={10}>\r\n\r\n                    </Col>\r\n                    \r\n                    <Col xs={1} style={{marginRight:\"0px\", paddingLeft:\"0px\"}}>\r\n                      <h6 >לא כואב בכלל</h6>\r\n                    </Col>\r\n              </Row>\r\n\r\n              <Slider\r\n              min={0}\r\n              max={10}\r\n              defaultValue={8}\r\n              value={this.state.sliderValue}\r\n              onChange={this.onSliderChange}\r\n              step ={0.1}\r\n              reverse = {true}\r\n              railStyle={{ backgroundColor: 'grey', height: sliderHeight }}\r\n              trackStyle={{ backgroundColor: 'red', height: sliderHeight }}\r\n              handleStyle={{\r\n                borderColor: 'grey',\r\n                height: sliderHeight,\r\n                width: 1,\r\n                marginLeft: -14,\r\n                marginTop: 0,\r\n                backgroundColor: 'white',\r\n              }}\r\n\r\n              />\r\n\r\n              {/* slider value: {this.state.sliderValue} */}\r\n\r\n\r\n                  \r\n                </div>\r\n          }\r\n\r\n     \r\n           \r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n   \r\n          </Col>\r\n        </Row>\r\n\r\n\r\n        </Col>\r\n        </Row>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default LongTestPage;","import firebase from \"./services/firebase\";\r\nimport React, { Component, useState } from \"react\";\r\nimport Slider, { Range } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\n\r\n\r\nconst db = firebase.collection(\"/BGU-lab-dev\");\r\n\r\nclass PersonalDetails extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      testCouner: 0,\r\n      sliderValue: 0,\r\n      start:false,\r\n      lastDocID:\"\",\r\n      firstName:\"\",\r\n      lastName:\"\",\r\n      saved:false,\r\n\r\n    }\r\n\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n    \r\n\r\n  }\r\n  componentDidMount() {\r\n    this.unsubscribe = firebase.collection('/slider-data').onSnapshot(this.onCollectionUpdate) \r\n    this.setState({sliderValue:0})\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // we have to unsubscribe when component unmounts, because we don't need to check for updates\r\n    this.unsubscribe()\r\n  }\r\n\r\n  \r\n  onCollectionUpdate = (querySnapshot) => {\r\n    // we have to update the state\r\n    let value = 0;\r\n    querySnapshot.forEach((document) => {\r\n      const doc= document.data();\r\n      console.log(doc)\r\n      value = doc.value\r\n    })\r\n    this.setState({value:value, sliderValue:value})\r\n\r\n  }\r\n\r\n\r\n\r\n  getData() {\r\n    let value;\r\n    db.get().then(function(snapshot) {\r\n      snapshot.forEach( function(childSnapshot){\r\n        db.doc(childSnapshot.id).get().\r\n        then( docSnapshot => {\r\n          [docSnapshot].forEach( doc => {\r\n            const data = doc.data();\r\n            console.log(doc.id, data);\r\n            console.log(`sliderID: ${data.id}, value: ${data.value}`)\r\n            value =  data.value;\r\n          })\r\n\r\n        })\r\n        //console.log(`id: ${childSnapshot.id}, data: ${childSnapshot.data}`)\r\n      })\r\n    })\r\n    console.log(value)\r\n    return value\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  update( input) {\r\n    db.get().then(function(snapshot) {\r\n      snapshot.forEach( function(childSnapshot){\r\n        db.doc(childSnapshot.id).update({value:input})\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n    \r\n\r\n\r\n  onSliderChange = value => {\r\n    this.setState(\r\n      {\r\n        sliderValue:value\r\n      },\r\n      () => {\r\n        console.log(this.state.sliderValue);\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  \r\n  handleChange(event) {\r\n    const value = event.target.value;\r\n    const name = event.target.name\r\n    let update =  {}\r\n    update[name] = value\r\n    this.setState(update);\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    db.orderBy('time', 'desc').limit(1).get().\r\n            then((data) =>{\r\n              const docRef = data.docs[0];\r\n              const docData = docRef.data()\r\n              const docID = docRef.id\r\n              const dataUpdate = {firstName: this.state.firstName, lastName:this.state.lastName}\r\n              const docRefUpdate = db.doc(docRef.id);\r\n              docRefUpdate.update(dataUpdate)\r\n              console.log('updating doc with: ' +JSON.stringify(dataUpdate) )\r\n              this.setState({saved:true})\r\n            })\r\n \r\n\r\n  }\r\n  \r\n  render(){\r\n    let sliderHeight = 200;\r\n    return (\r\n        <Row>\r\n          <Col>\r\n          <form onSubmit={this.handleSubmit}>\r\n\r\n            <Row>\r\n                <Col>\r\n\r\n                <label>\r\n                <input name ={\"firstName\"} value={this.state.firstName} onChange={this.handleChange} />\r\n                :שם פרטי\r\n                </label>\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                <label>\r\n                <input name = {\"lastName\"} value={this.state.lastName} onChange={this.handleChange} />\r\n                :שם משפחה\r\n                </label>\r\n\r\n\r\n                \r\n                </Col>\r\n            </Row>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n\r\n            </form>\r\n\r\n            {this.state.saved? <h6>נשמר</h6> : null}\r\n\r\n                \r\n\r\n\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default PersonalDetails;","import firebase from \"./services/firebase\";\r\nimport React, { Component, useState } from \"react\";\r\nimport Slider, { Range } from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\n\r\nimport dateFormat from 'dateformat';\r\n\r\n\r\nconst db = firebase.collection(\"/BGU-lab-dev\");\r\n\r\nclass HappinesPage extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      testCouner: 0,\r\n      sliderValue: 0,\r\n      start:false,\r\n      lastDocID:\"\",\r\n\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.start = this.start.bind(this);\r\n\r\n\r\n    \r\n\r\n  }\r\n  componentDidMount() {\r\n    this.unsubscribe = firebase.collection('/slider-data').onSnapshot(this.onCollectionUpdate) \r\n    this.setState({sliderValue:0})\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // we have to unsubscribe when component unmounts, because we don't need to check for updates\r\n    this.unsubscribe()\r\n  }\r\n\r\n  \r\n  onCollectionUpdate = (querySnapshot) => {\r\n    // we have to update the state\r\n    let value = 0;\r\n    querySnapshot.forEach((document) => {\r\n      const doc= document.data();\r\n      console.log(doc)\r\n      value = doc.value\r\n    })\r\n    this.setState({value:value, sliderValue:value})\r\n\r\n  }\r\n\r\n\r\n\r\n  getData() {\r\n    let value;\r\n    db.get().then(function(snapshot) {\r\n      snapshot.forEach( function(childSnapshot){\r\n        db.doc(childSnapshot.id).get().\r\n        then( docSnapshot => {\r\n          [docSnapshot].forEach( doc => {\r\n            const data = doc.data();\r\n            console.log(doc.id, data);\r\n            console.log(`sliderID: ${data.id}, value: ${data.value}`)\r\n            value =  data.value;\r\n          })\r\n\r\n        })\r\n        //console.log(`id: ${childSnapshot.id}, data: ${childSnapshot.data}`)\r\n      })\r\n    })\r\n    console.log(value)\r\n    return value\r\n  }\r\n\r\n\r\n\r\n  create(tutorial) {\r\n    return db.add(tutorial);\r\n  }\r\n\r\n\r\n\r\n  update( input) {\r\n    db.get().then(function(snapshot) {\r\n      snapshot.forEach( function(childSnapshot){\r\n        db.doc(childSnapshot.id).update({value:input})\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  addTestScoreToDoc2(input){\r\n         db.orderBy('time', 'desc').limit(1).get().\r\n            then((data) =>{\r\n              const docRef = data.docs[0];\r\n              const docData = docRef.data()\r\n              const docID = docRef.id\r\n              let currTestCouner = this.state.testCouner\r\n              if(this.state.lastDocID !== docRef.id) {\r\n                this.setState({lastDocID: docRef.id, testCouner:1})\r\n                currTestCouner=1;\r\n              }\r\n\r\n              let dataToUpdate = docData[\"calibrationTests\"]\r\n\r\n              this.setState(prevState =>  {return {testCouner: prevState.testCouner+1} })\r\n              let time = dateFormat(\"HH:MM:ss\")\r\n              console.log('time: ' +time)\r\n              let newData ={testNum : ` אושר ${currTestCouner}`, value:input, time:time }\r\n              //newData[scoreCounter] = input\r\n              dataToUpdate.push(newData)\r\n              const docRefUpdate = db.doc(docRef.id);\r\n              docRefUpdate.update({calibrationTests: dataToUpdate})\r\n\r\n\r\n            } \r\n            )\r\n  }\r\n\r\n\r\n \r\n    \r\n  handleChange(event) {\r\n    this.setState({input: event.target.value}, ()=>{\r\n        this.update(event.target.value,this)\r\n      });\r\n    }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //this.update(this.state.sliderValue)\r\n    this.addTestScoreToDoc2(this.state.sliderValue)\r\n    this.setState({sliderValue:0})\r\n\r\n  }\r\n\r\n  handleReset(event) {\r\n    event.preventDefault();\r\n    //this.setState({sliderValue:0})\r\n    this.setState({sliderValue:0})\r\n    \r\n\r\n  }\r\n\r\n  start(event) {\r\n    event.preventDefault();\r\n    //this.setState({sliderValue:0})\r\n    this.setState({sliderValue:0, start:true})\r\n\r\n  }\r\n\r\n  delete(id) {\r\n    return db.doc(id).delete();\r\n  }\r\n\r\n  onSliderChange = value => {\r\n    this.setState(\r\n      {\r\n        sliderValue:value\r\n      },\r\n      () => {\r\n        console.log(this.state.sliderValue);\r\n      }\r\n    );\r\n  };\r\n\r\n  \r\n  render(){\r\n    let sliderHeight = 200;\r\n    return (\r\n        <Row>\r\n\r\n          <Col>\r\n          <h3>\r\n              ?ברגע זה, כמה אתה מרגיש מאושר\r\n          </h3>\r\n\r\n        <Row>\r\n\r\n          <Col >\r\n          {!this.state.start ?  \r\n                    <Button onClick ={this.start}>\r\n                    התחל\r\n                  </Button>\r\n          :\r\n                <div>\r\n                     \r\n                       <Button\r\n                variant=\"outline-primary\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                  Submit\r\n              </Button>\r\n\r\n              <Row>\r\n                    <Col xs={1} >\r\n                    <h6 style={{margin:\"0px\"}}> הכי הרבה</h6>\r\n                    </Col>\r\n\r\n                    <Col xs={10}>\r\n\r\n                    </Col>\r\n                    \r\n                    <Col xs={1} style={{marginRight:\"0px\", paddingLeft:\"0px\"}}>\r\n                      <h6 >בכלל לא</h6>\r\n                    </Col>\r\n              </Row>\r\n              \r\n\r\n              <Slider\r\n              min={0}\r\n              max={10}\r\n              defaultValue={8}\r\n              value={this.state.sliderValue}\r\n              onChange={this.onSliderChange}\r\n              step ={0.1}\r\n              reverse = {true}\r\n              railStyle={{ backgroundColor: 'grey', height: sliderHeight }}\r\n              trackStyle={{ backgroundColor: 'red', height: sliderHeight }}\r\n              handleStyle={{\r\n                borderColor: 'grey',\r\n                height: sliderHeight,\r\n                width: 1,\r\n                marginLeft: -14,\r\n                marginTop: 0,\r\n                backgroundColor: 'white',\r\n              }}\r\n\r\n              />\r\n\r\n              {/* slider value: {this.state.sliderValue} */}\r\n\r\n\r\n                  \r\n                </div>\r\n          }\r\n\r\n     \r\n           \r\n          </Col>\r\n        </Row>\r\n    \r\n\r\n\r\n        </Col>\r\n        </Row>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default HappinesPage;","import React, { Component , useState} from 'react';\r\n\r\nimport CalibrationPage from './CalibrationPage'\r\nimport LongTestPage from './LongTestPage'\r\nimport PersonalDetails from './PersonalDetails'\r\n\r\n\r\nimport './ExpPage2.css';\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Navbar,\r\n  Nav\r\n} from \"react-bootstrap\";\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams,\r\n\r\n  } from \"react-router-dom\";\r\n\r\nimport dateFormat from 'dateformat';\r\nimport HappinesPage from './HappinesPage';\r\n\r\n\r\nconst ExpPage2 = (props) => {\r\n\r\n    // let { path, url } = useRouteMatch();\r\n    const [startExperiment, setExpirmentStatus] = useState(false);\r\n    const [expirementerDoc, setExpirementerDoc] = useState()\r\n    const [activeTab,changeTab] = useState(\"start\")\r\n    const [menuOrBackButton, setMenu] = useState(\"menu\")\r\n\r\n    function initNewDocument(){\r\n        const db = props.db;\r\n        console.log(db)\r\n        db.add({\r\n            calibrationTests: [],\r\n            time:dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"),\r\n          }).then(docRef => {\r\n              console.log('new doc ref: ' + docRef.id);\r\n              setExpirementerDoc(docRef.id)\r\n              props.sendDocRefToParent(docRef.id)\r\n\r\n          }) \r\n\r\n\r\n        // console.log(\"new doc: \" + expirementerDoc +  \"\\n end of doc\")\r\n        // console.log(\"docRef: \" + resRef)\r\n    }\r\n\r\n    function continuteLastDocument(){\r\n        console.log (\"IN USE EFFECT\")\r\n        const db = props.db\r\n        db.orderBy('time', 'desc').limit(1).get().\r\n           then((data) =>{\r\n               const docRef = data.docs[0];\r\n            //    const docData = docRef.data()\r\n            //    const docID = docRef.id\r\n               setExpirementerDoc(docRef.id)\r\n\r\n\r\n           }\r\n           )\r\n        \r\n    }\r\n\r\n\r\n    \r\n\r\n        return (\r\n\r\n                <Row>\r\n                    <Col>\r\n                    <h2>\r\n                    דף נבדק \r\n\r\n                </h2>\r\n\r\n                    {\r\n                        !startExperiment  ? \r\n                        <Row>\r\n                            <Col>\r\n                                {/* <Button variant=\"primary\"\r\n                                 onClick = {()=> {\r\n                                    setExpirmentStatus(true);\r\n                                    initNewDocument()\r\n                                    }}> \r\n                                   התחל ניסוי עבור נסיין חדש\r\n                                </Button>\r\n                                */}\r\n\r\n                                <Button  variant=\"success\"\r\n                                    onClick = {()=> {\r\n                                        setExpirmentStatus(true);\r\n                                        continuteLastDocument()\r\n                                        }}\r\n                                    >\r\n                                    המשך\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        : \r\n                        <Row>\r\n                            <Col>\r\n        \r\n                             \r\n                                {\r\n                                menuOrBackButton === \"menu\" ? \r\n                                <Row className=\"text-light bg-teva-lime py-3\">\r\n                                    <Col >\r\n                               \r\n                                    <Navbar   style = {{ marginLeft: \"auto\", marginRight:\"auto\", width :\"50%\"}} >\r\n                                   \r\n                                    \r\n                                    <Nav className=\"mx-auto justify-content-center\">\r\n\r\n                                    <Nav>\r\n                                        <Nav.Link\r\n                                            href=\"\"\r\n                                            className=\"px-4\"\r\n                                            onClick={() => {changeTab(\"happines\");setMenu(\"hide\") }}\r\n                                            active={activeTab === \"happines\"}\r\n                                            >\r\n                                            דירוג אושר\r\n                                        </Nav.Link>\r\n                                        </Nav>\r\n\r\n                                        \r\n                                        <Nav>\r\n                                        <Nav.Link\r\n                                            href=\"\"\r\n                                            className=\"px-4\"\r\n                                            onClick={() => {changeTab(\"LongTest\");setMenu(\"hide\") }}\r\n                                            active={activeTab === \"LongTest\"}\r\n                                            >\r\n                                            ניסוי ארוך\r\n                                        </Nav.Link>\r\n                                        </Nav>\r\n\r\n\r\n                                        <Nav>\r\n                                        <Nav.Link\r\n                                            href=\"\"\r\n                                            className=\"px-4\"\r\n                                            onClick={() => {changeTab(\"Calibration\"); setMenu(\"hide\")}}\r\n                                            active={activeTab === \"Calibration\"}\r\n                                            >\r\n                                            כיול כאב\r\n                                        </Nav.Link>\r\n                                        </Nav>\r\n\r\n                                        <Nav>\r\n                                        <Nav.Link\r\n                                            href=\"\"\r\n                                            className=\"px-4\"\r\n                                            active={activeTab === \"personalDetails\"}\r\n                                            onClick={() => {changeTab(\"personalDetails\"); setMenu(\"hide\")}}\r\n\r\n                                            >\r\n                                            טופס פרטי נבדק                                       \r\n                                            </Nav.Link>\r\n                                        </Nav>\r\n\r\n\r\n                                    </Nav>\r\n                                    </Navbar>\r\n\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                           \r\n                                \r\n\r\n                                :\r\n                                <Navbar className=\"text-light bg-teva-lime py-3\" >\r\n                                    <Nav className=\"mx-auto justify-content-center\">\r\n                                            <Nav.Link\r\n                                                href=\"\"\r\n                                                className=\"px-4\"\r\n                                                onClick = {()=> setMenu(\"menu\")}\r\n                                                active={activeTab === \"LongTest\"}\r\n                                                >\r\n                                                חזרה לתפריט\r\n                                            </Nav.Link>\r\n                                        </Nav>\r\n                                </Navbar>\r\n\r\n                            }\r\n\r\n                                <Row>\r\n                                    <Col>\r\n\r\n                                        {\r\n                                            activeTab === \"start\" ? null :\r\n                                            activeTab === \"Calibration\" ? <CalibTest docRefID = {expirementerDoc}></CalibTest> :\r\n                                            activeTab === \"personalDetails\" ? <PersonalDetails  docRefID = {expirementerDoc} ></PersonalDetails> :\r\n                                            activeTab === \"happines\"    ?   <HappinesPage docRefID = {expirementerDoc}></HappinesPage> :\r\n                                                                            <LongTest docRefID = {expirementerDoc} />\r\n                                        }\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n\r\n\r\n                            \r\n                               </Col>\r\n                        </Row>\r\n                    }\r\n                   \r\n                    </Col>\r\n                </Row>\r\n  \r\n\r\n             \r\n        );\r\n    \r\n}\r\n\r\nfunction CalibTest(props) {\r\n    // The <Route> that rendered this component has a\r\n    // path of `/topics/:topicId`. The `:topicId` portion\r\n    // of the URL indicates a placeholder that we can\r\n    // get from `useParams()`.\r\n  \r\n    return (\r\n      <div>\r\n\r\n        <h3>\r\n                כיול כאב\r\n            </h3>\r\n\r\n            <div>\r\n\r\n            <Row>\r\n                    <Col>\r\n                        <CalibrationPage  docRefID = {props.docRefID}/>\r\n                    </Col>\r\n            </Row>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  function LongTest(props) {\r\n    // The <Route> that rendered this component has a\r\n    // path of `/topics/:topicId`. The `:topicId` portion\r\n    // of the URL indicates a placeholder that we can\r\n    // get from `useParams()`.\r\n  \r\n    return (\r\n      <div>\r\n\r\n        <h3>\r\n               כאב ארוך\r\n            </h3>\r\n\r\n            <div>\r\n\r\n            <Row>\r\n                    <Col>\r\n                        <LongTestPage  docRefID = {props.docRefID} />\r\n                    </Col>\r\n            </Row>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n\r\nexport default ExpPage2;","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component, useState } from \"react\";\nimport ReactGA from 'react-ga';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nimport firebase from \"./services/firebase\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Button,\n  Container,\n  Row,\n  Col,\n  Navbar,\n  Nav\n} from \"react-bootstrap\";\nimport ManagerPage from './ManagerPage';\nimport ExpPage2 from './ExpPage2';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      db: firebase.collection(\"/BGU-lab-dev\"),\n      activeDocRef: undefined,\n      activeTab:\"welcome\",\n\n    };\n    this.changeTab = this.changeTab.bind(this);\n\n\n    const db = firebase.settings({\n        timestampsInSnapshots: true\n      });\n\n\n    const trackingId = \"UA-180348020-1\"; \n    ReactGA.initialize(trackingId, {\n      debug: true\n    });\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n  }\n\n  getDocRefFromChild = (docRef) =>{\n    console.log(`recibed from child: ${docRef}`)\n    this.setState({activeDocRef:docRef})\n  }\n\n  componentDidMount() {\n    this.unsubscribe = firebase.collection('/BGU-lab-dev').onSnapshot(this.onCollectionUpdate) \n\n  }\n\n  componentWillUnmount() {\n    // we have to unsubscribe when component unmounts, because we don't need to check for updates\n    this.unsubscribe()\n  }\n\n  changeTab(tab){\n    this.setState({ activeTab: tab });\n\n  }\n\n\n  render(){\n    return (\n      <div  className=\"App\">\n\n      <Container fluid  className=\"mx-auto justify-content-center\">\n        <Row className=\"text-light bg-teva-lime py-3\"> \n          <Col>\n            <Navbar   style = {{ marginLeft: \"auto\", marginRight:\"auto\", width :\"50%\"}} >\n            <Nav className=\"mx-auto justify-content-center\">\n              <Nav.Link\n                href=\"\"\n                className=\"px-4\"\n                onClick={() => this.changeTab(\"manager\")}\n                active={this.state.activeTab === \"manager\"}\n                >\n                  מנהל ניסוי\n              </Nav.Link>\n            </Nav>\n\n            <Nav>\n              <Nav.Link\n                href=\"\"\n                className=\"px-4\"\n                onClick={() => this.changeTab(\"experimeneter\")}\n                active={this.state.activeTab === \"experimeneter\"}\n                >\n                  נבדק\n              </Nav.Link>\n            </Nav>\n\n            </Navbar>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n\n              {\n              this.state.activeTab === \"welcome\" ? <h2> דף כניסה</h2>\n                                                  :\n            \n              this.state.activeTab === \"manager\" ?\n                                        <ManagerPage db = {this.state.db} docRef = {this.state.activeDocRef} />\n                                                  :\n                                        <ExpPage2  db = {this.state.db} sendDocRefToParent = {this.getDocRefFromChild}/>\n              }\n\n          </Col>\n\n        </Row>\n\n      </Container>\n      </div>\n\n    );\n  }\n  \n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}